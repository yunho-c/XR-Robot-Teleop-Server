name: Python Package CI/CD

# Run on pushes and PRs to main, but publish only on new tags
on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*.*.*'  # Trigger on tags like v1.0.0
  pull_request:
    branches: [ "main" ]

jobs:

  # Lint & run unit tests
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .[dev] # Assumes that a [dev] extra exists in pyproject.toml with tooling

      - name: Lint with Ruff
        run: ruff check .

      - name: Check formatting with Ruff
        run: ruff format --check .

      - name: Test with pytest
        run: pytest

  # Publish package to PyPI
  publish:
    # Only run this job if the 'test' job passes and a new tag was pushed
    needs: test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11' # Use a specific version for publishing
    
    - name: Install build tools
      run: python -m pip install --upgrade pip build twine
      
    - name: Build package
      run: python -m build
      
    - name: Publish package to PyPI
      run: python -m twine upload dist/*
      env:
        # Use a token to authenticate with PyPI
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
